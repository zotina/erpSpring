{"version":3,"file":"Link-PW9qmcCL.js","sources":["../../../../frontend/src/components/Link.vue"],"sourcesContent":["<template>\n\t<Autocomplete\n\t\tref=\"autocompleteRef\"\n\t\tsize=\"sm\"\n\t\tv-model=\"value\"\n\t\t:placeholder=\"__('Select {0}', [__(doctype)])\"\n\t\t:options=\"options.data\"\n\t\t:class=\"disabled ? 'pointer-events-none' : ''\"\n\t\t:disabled=\"disabled\"\n\t\t@update:query=\"handleQueryUpdate\"\n\t/>\n</template>\n\n<script setup>\nimport { createResource, Autocomplete, debounce } from \"frappe-ui\"\nimport { ref, computed, watch } from \"vue\"\n\nconst props = defineProps({\n\tdoctype: {\n\t\ttype: String,\n\t\trequired: true,\n\t},\n\tmodelValue: {\n\t\ttype: String,\n\t\trequired: false,\n\t\tdefault: \"\",\n\t},\n\tfilters: {\n\t\ttype: Object,\n\t\tdefault: {},\n\t},\n\tdisabled: {\n\t\ttype: Boolean,\n\t\tdefault: false,\n\t},\n})\n\nconst emit = defineEmits([\"update:modelValue\"])\n\nconst autocompleteRef = ref(null)\nconst searchText = ref(\"\")\n\nconst value = computed({\n\tget: () => props.modelValue,\n\tset: (val) => {\n\t\tconst newVal = (val && typeof val === \"object\" && val.value !== undefined) ? val.value : val\n\t\temit(\"update:modelValue\", newVal || \"\")\n\t},\n})\n\nconst options = createResource({\n\turl: \"frappe.desk.search.search_link\",\n\tparams: {\n\t\tdoctype: props.doctype,\n\t\ttxt: searchText.value,\n\t\tfilters: props.filters,\n\t},\n\tmethod: \"POST\",\n\ttransform: (data) => {\n\t\treturn data.map((doc) => {\n\t\t\tconst title = doc?.description?.split(\",\")?.[0]\n\t\t\treturn {\n\t\t\t\tlabel: title ? `${title} : ${doc.value}` : doc.value,\n\t\t\t\tvalue: doc.value,\n\t\t\t}\n\t\t})\n\t},\n})\n\nconst reloadOptions = (searchTextVal) => {\n\toptions.update({\n\t\tparams: {\n\t\t\ttxt: searchTextVal,\n\t\t\tdoctype: props.doctype,\n\t\t},\n\t})\n\toptions.reload()\n}\n\nconst handleQueryUpdate = debounce((newQuery) => {\n    const val = newQuery || \"\"\n\n    if (val === \"\" && props.modelValue) return\n\n    if (searchText.value === val) return\n    searchText.value = val\n    reloadOptions(val)\n}, 300)\n\nwatch(\n\t() => props.doctype,\n\t() => {\n\t\tif (!props.doctype || props.doctype === options.doctype) return\n\t\treloadOptions(\"\")\n\t},\n\t{ immediate: true }\n)\n</script>\n"],"names":["props","__props","emit","__emit","autocompleteRef","ref","searchText","value","computed","val","newVal","options","createResource","data","doc","title","_b","_a","reloadOptions","searchTextVal","handleQueryUpdate","debounce","newQuery","watch"],"mappings":"gVAiBA,MAAMA,EAAQC,EAoBRC,EAAOC,EAEPC,EAAkBC,EAAI,IAAI,EAC1BC,EAAaD,EAAI,EAAE,EAEnBE,EAAQC,EAAS,CACtB,IAAK,IAAMR,EAAM,WACjB,IAAMS,GAAQ,CACb,MAAMC,EAAUD,GAAO,OAAOA,GAAQ,UAAYA,EAAI,QAAU,OAAaA,EAAI,MAAQA,EACzFP,EAAK,oBAAqBQ,GAAU,EAAE,CACtC,CACF,CAAC,EAEKC,EAAUC,EAAe,CAC9B,IAAK,iCACL,OAAQ,CACP,QAASZ,EAAM,QACf,IAAKM,EAAW,MAChB,QAASN,EAAM,OACf,EACD,OAAQ,OACR,UAAYa,GACJA,EAAK,IAAKC,GAAQ,SACxB,MAAMC,GAAQC,GAAAC,EAAAH,GAAA,YAAAA,EAAK,cAAL,YAAAG,EAAkB,MAAM,OAAxB,YAAAD,EAA+B,GAC7C,MAAO,CACN,MAAOD,EAAQ,GAAGA,CAAK,MAAMD,EAAI,KAAK,GAAKA,EAAI,MAC/C,MAAOA,EAAI,KACf,CACG,CAAA,CAEH,CAAC,EAEKI,EAAiBC,GAAkB,CACxCR,EAAQ,OAAO,CACd,OAAQ,CACP,IAAKQ,EACL,QAASnB,EAAM,OACf,CACD,CAAA,EACDW,EAAQ,OAAM,CACf,EAEMS,EAAoBC,EAAUC,GAAa,CAC7C,MAAMb,EAAMa,GAAY,GAEpBb,IAAQ,IAAMT,EAAM,YAEpBM,EAAW,QAAUG,IACzBH,EAAW,MAAQG,EACnBS,EAAcT,CAAG,EACrB,EAAG,GAAG,EAEN,OAAAc,EACC,IAAMvB,EAAM,QACZ,IAAM,CACD,CAACA,EAAM,SAAWA,EAAM,UAAYW,EAAQ,SAChDO,EAAc,EAAE,CAChB,EACD,CAAE,UAAW,EAAI,CAClB"}