{"version":3,"file":"ShiftAssignmentForm-DU1rtIC_.js","sources":["../../../../frontend/src/views/attendance/ShiftAssignmentForm.vue"],"sourcesContent":["<template>\n\t<ion-page>\n\t\t<ion-content :fullscreen=\"true\">\n\t\t\t<FormView\n\t\t\t\tv-if=\"formFields.data\"\n\t\t\t\tdoctype=\"Shift Assignment\"\n\t\t\t\tv-model=\"shiftAssignment\"\n\t\t\t\t:isSubmittable=\"true\"\n\t\t\t\t:fields=\"formFields.data\"\n\t\t\t\t:id=\"props.id\"\n\t\t\t\t@validateForm=\"validateForm\"\n\t\t\t/>\n\t\t</ion-content>\n\t</ion-page>\n</template>\n\n<script setup>\nimport { IonPage, IonContent } from \"@ionic/vue\"\nimport { createResource } from \"frappe-ui\"\nimport { ref, watch, inject } from \"vue\"\n\nimport FormView from \"@/components/FormView.vue\"\n\nconst employee = inject(\"$employee\")\n\nconst props = defineProps({\n\tid: {\n\t\ttype: String,\n\t\trequired: false,\n\t},\n})\n\n// reactive object to store form data\nconst shiftAssignment = ref({})\n\n// get form fields\nconst formFields = createResource({\n\turl: \"hrms.api.get_doctype_fields\",\n\tparams: { doctype: \"Shift Assignment\" },\n\tauto: true,\n\ttransform(data) {\n\t\tif (props.id) return data\n\t\treturn data.filter(\n\t\t\t(field) => ![\"employee\", \"employee_name\", \"status\", \"company\"].includes(field.fieldname)\n\t\t)\n\t},\n})\n\n// form scripts\nwatch(\n\t() => shiftAssignment.value.employee,\n\t(employee_id) => {\n\t\tif (props.id && employee_id !== employee.data.name) {\n\t\t\t// if employee is not the current user, set form as read only\n\t\t\tsetFormReadOnly()\n\t\t}\n\t}\n)\n\nwatch(\n\t() => [shiftAssignment.value.start_date, shiftAssignment.value.end_date],\n\t([start_date, end_date]) => {\n\t\tvalidateDates(start_date, end_date)\n\t}\n)\n\n// helper functions\nfunction setFormReadOnly() {\n\tformFields.data.map((field) => (field.read_only = true))\n}\n\nfunction validateDates(start_date, end_date) {\n\tif (!(start_date && end_date)) return\n\n\tconst error_message = start_date > end_date ? __(\"End Date cannot be before Start Date\") : \"\"\n\n\tconst start_date_field = formFields.data.find((field) => field.fieldname === \"start_date\")\n\tstart_date_field.error_message = error_message\n}\n\nfunction validateForm() {\n\tshiftAssignment.value.employee = employee.data.name\n}\n</script>\n\n"],"names":["employee","inject","props","__props","shiftAssignment","ref","formFields","createResource","data","field","watch","employee_id","setFormReadOnly","start_date","end_date","validateDates","error_message","start_date_field","validateForm"],"mappings":"ubAuBA,MAAMA,EAAWC,EAAO,WAAW,EAE7BC,EAAQC,EAQRC,EAAkBC,EAAI,CAAE,CAAA,EAGxBC,EAAaC,EAAe,CACjC,IAAK,8BACL,OAAQ,CAAE,QAAS,kBAAoB,EACvC,KAAM,GACN,UAAUC,EAAM,CACf,OAAIN,EAAM,GAAWM,EACdA,EAAK,OACVC,GAAU,CAAC,CAAC,WAAY,gBAAiB,SAAU,SAAS,EAAE,SAASA,EAAM,SAAS,CAC1F,CACE,CACF,CAAC,EAGDC,EACC,IAAMN,EAAgB,MAAM,SAC3BO,GAAgB,CACZT,EAAM,IAAMS,IAAgBX,EAAS,KAAK,MAE7CY,EAAe,CAElB,CACA,EAEAF,EACC,IAAM,CAACN,EAAgB,MAAM,WAAYA,EAAgB,MAAM,QAAQ,EACvE,CAAC,CAACS,EAAYC,CAAQ,IAAM,CAC3BC,EAAcF,EAAYC,CAAQ,CACpC,CACA,EAGA,SAASF,GAAkB,CAC1BN,EAAW,KAAK,IAAKG,GAAWA,EAAM,UAAY,EAAK,CACxD,CAEA,SAASM,EAAcF,EAAYC,EAAU,CAC5C,GAAI,EAAED,GAAcC,GAAW,OAE/B,MAAME,EAAgBH,EAAaC,EAAW,GAAG,sCAAsC,EAAI,GAErFG,EAAmBX,EAAW,KAAK,KAAMG,GAAUA,EAAM,YAAc,YAAY,EACzFQ,EAAiB,cAAgBD,CAClC,CAEA,SAASE,GAAe,CACvBd,EAAgB,MAAM,SAAWJ,EAAS,KAAK,IAChD"}